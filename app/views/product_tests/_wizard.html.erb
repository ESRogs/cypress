<% content_for :head do %>
  <style type="text/css">
    /* formwizard and validation */
    .navigation_button {
      width : 70px;
    }
    label.workflow {
      width:220px;
      text-align:center;
      color:green;
    }
    #navigation {
      margin-top : 0.5em;
      margin-right : 1em;
      text-align: center;
      padding-bottom: 1em;
    }
    #navigation .noborder {border: 0;color:green;background:transparent;}
    .link {
      width:90%;
      margin-left:5%;
      height:5em;
    }
    dd .date_range {
      width: 400px;
    }
    #validationErrorMessages {
      text-align:center;
    }
    label.validationErrors {
      color: red;
      font-size: 1em;
      font-weight:bold;
      width: 40em;
      margin-left: 0.5em;
    }

    /* vertical tabs */
    .ui-tabs-vertical { width: 55em; }
    .ui-tabs-vertical .ui-tabs-nav { padding: .2em .1em .2em .2em; float: left; width: 12em; }
    .ui-tabs-vertical .ui-tabs-nav li { clear: left; width: 100%; border-bottom-width: 1px !important; border-right-width: 0 !important; margin: 0 -1px .2em 0; }
    .ui-tabs-vertical .ui-tabs-nav li a { display:block; }
    .ui-tabs-vertical .ui-tabs-nav li.ui-tabs-selected { padding-bottom: 0; padding-right: .1em; border-right-width: 1px; border-right-width: 1px; }
    .ui-tabs-vertical .ui-tabs-panel { padding: .5em; float: right; width: 47em;}
  </style>
<% end %>

<%= simple_form_for([@test], :html => { :method => submit_method, :multipart => true }) do |f| %>
  <%= f.hidden_field :product_id, :value => @product.id %>

  <section id="wizard-metadata-screen" class="first step" style="overflow:auto;">
    <h2 class="ui-widget-title">Describe the test...</h2>
    <dl>
      <dt>
        Test Name:
      </dt>
      <dd>
        <table><tr><td>
              <%= f.text_field :name, :size=>100%>
            </td></tr></table>
      </dd>
      <dt>
        Reporting Period:
      </dt>
      <dd>
        <span class="date_range">from
          <input type="text" class="effective_date" id="effective_date_start" name="product_test[effective_date_start]" size="8" value="<%= Time.at(@period_start).strftime("%m/%d/%Y") %>"/>
          to
          <input type="text" class="effective_date" id="effective_date_end" name="product_test[effective_date_end]" size="8" value="<%= Time.at(@effective_date).strftime("%m/%d/%Y") %>"/>
        </span>
      </dd>
      <dt>
        <%= f.label :description, "Description:" %>
      </dt>
      <dd>
        <%= f.text_area :description, :cols=>80, :rows=>3 %>
      </dd>
    </dl>

    <h2>Please select a workflow option...</h2>
    <section style="text-align:left;">
           
      <p>
        <input id="wf2" type="radio" name="workflow" class="link" checked="checked" value="wizard-patients-screen" />
        <label for="wf2" class="workflow">Test Deck C32/CCR Export</label><br/>
        The Cypress Test Deck will be exported in HITSP C32 or ASTM CCR XML format and imported into an EHR software product or module.      </p>
      <br/>
       <p>
        <input id="wf1" type="radio" name="workflow" class="link" value="wizard-patients-screen" />
        <label for="wf1" class="workflow">Test Deck HTML Export</label><br/>
        The Cypress Test Deck will be exported in HTML format and input into an EHR software product or module.
      </p>
<br/>
      <p>
        <input id="wf3" type="radio" name="workflow" class="link" value="wizard-byod-screen" />
        <label for="wf3" class="workflow">C32/CCR Upload</label><br/>
       Exported HITSP C32 or ASTM CCR XML formatted patient records will be uploaded to Cypress in lieu of the Test Deck for this test.
      </p>
    </section>
  </section>

  <section id="wizard-patients-screen" class="step">
    <input type="hidden" class="link" value="wizard-measures-screen"/>
    <h2 class="ui-widget-title">Select patient records to use...</h2>
    <section>
      Cypress has two predefined patient populations to choose from - the full 225 or a subset of 20
      designed to test the core and core alternate Stage 1 Clinical Quality Measures.<br/><br/>
      <p>
        <%= f.collection_select(:patient_population, @patient_populations, :name, :description, {:prompt =>"Choose a population"}, {:size => 4}) %>
      </p>
    </section>

    <br/>
    <section>
      Patient test mode:
      <select>
        <option>name randomization</option>
      </select>
    </section>
  </section>

  <section id="wizard-byod-screen" class="step">
    <input type="hidden" class="link" value="wizard-measures-screen"/>
    <h2 class="ui-widget-title">Bring your own records...</h2>
    <dl>
      <dt><%= label_tag :byod_label, "upload .zip of records:" %></dt>
      <dd><%= file_field_tag :byod %></dd>
    </dl>
    <dl>
      <dt>as:</dt>
      <dd>
        <%= f.radio_button :upload_format, "c32",
          :checked => (@test[:upload_format] == nil || @test[:upload_format] == "c32") %>
        <%= f.label :upload_format_c32, "C32" %>
        <%= f.radio_button :upload_format, "ccr", :checked => @test[:upload_format] == "ccr"%>
        <%= f.label :upload_format_ccr, "CCR" %>
      </dd>
    </dl>
  </section>

  <section id="wizard-measures-screen" class="step submit_step">
    <h2 class="ui-widget-title">Identify <strong>at least one</strong> quality measure to test...</h2>
    <span class="header_commands" style="text-align:center;"><input type="checkbox" id="all_measures"/><label for="all_measures">all quality measures</label></span>
    <div id="tabs">
      <!-- set up a tab header for each measure group -->
      <ul>
        <% @measures_categories.sort.each do |category, measures| %>
          <li>
            <a href="#<%= category.tr(" '", "_") %>"><%= category %></a><span style="padding-top:.5em;text-align:right;padding-right:5px;" id="<%= category.tr(" '", "_") %>_group_total"></span></li>
        <% end %>
      </ul>
      <!-- set up a tab for each measure group -->
      <% @measures_categories.sort.each do |category, measures| %>
        <div id="<%= category.tr(" '", "_")%>" class="measure_group"> <span class="header_commands"><input type="checkbox" id="<%= category.tr(" '", "_")%>_group" class="measure_group_all"/><label for="<%= category.tr(" '", "_")%>_group">all <%= category %> measures</label></span><br/>
          <%= f.collection_check_boxes :measure_ids, measures, :measure_id, :display_name, {}, {"class"=>["measure_cb", category.tr(" '", "_")]} %>
        </div>
      <% end %>
    </div>
  </section>


  <!--
  <section id="wizard-summary-screen" class="step submit_step">
    <h2 class="ui-widget-title">Summary page</h2>
    <p>Please verify your information below.</p>
    <div id="summaryContainer">
      Nothing should be here yet
    </div>
  </section>
  -->

  <div id="validationErrorMessages"></div>
  <div id="navigation">
    <a class="cmd" id="back"><input class="noborder" value="Back" type="reset" /></a>
    <a class="cmd" id="next"><input class="noborder" value="Next" type="submit" /> </a>
  </div>

  <script type="text/javascript">
    var cache = {}; // caching inputs for the visited steps

    $(document).ready(function() {
      $('.effective_date').datepicker().css({'width':'85px','text-align':'center'});
      // for styling the vertical tabs
      $('#tabs').tabs().addClass('ui-tabs-vertical ui-helper-clearfix').css({"width":"90%","margin-left":"5%"});
      $("#tabs li").removeClass('ui-corner-top').addClass('ui-corner-left');

      // establish the form wizard
      $('#new_product_test').formwizard({
        // !important - otherwise the rails form processing
        // doesn't redirect properly.  set formPluginEnabled to false
        formPluginEnabled: false,
        validationEnabled: true,
        focusFirstInput : true,
        formOptions : {
          dataType: 'json',
          resetForm: true
        },
        textSubmit: 'Done',
        disableUIStyles: true,
        validationOptions: {
          rules: {
            "product_test[name]": "required",
            "product_test[description]": "required",
            "product_test[effective_date_start]": {
              required: true,
              date: true
            },
            "product_test[effective_date_end]": {
              required: true,
              date: true
            },
            "product_test[patient_population]": "required",
            "product_test[measure_ids][]": "required",
            "byod": "required"
          },
          errorClass: "validationErrors",
          messages: {
            "product_test[name]": {required:"The test needs a name."},
            "product_test[description]": {required:"Give a brief description."},
            "product_test[effective_date_start]": { required:"Specify the start of the reporting period.", date:"Correct date format: mm/dd/yyyy"},
            "product_test[effective_date_end]": { required:"Specify the end of the reporting period", date:"Correct date format: mm/dd/yyyy"},
            "product_test[patient_population]": { required:"Choose a patient population."},
            "product_test[measure_ids][]": { required:"You must choose at least one quality measure."},
            "byod": { required:"You must provide a .zip file containing your patient records."}
          },
          errorPlacement: function(error, element) {
            error.appendTo( $('#validationErrorMessages') );
          }

        }
      }).bind("step_shown", function(event,data){ //TODO still need to hook up validation
        if(data.isLastStep){ // if this is the last step...then
          $("#summaryContainer").empty().append("<ul/>"); // empty the container holding the
          $.each(data.activatedSteps, function(i, id){ // for each of the activated steps...do
            if(id === "wizard-summary-screen") return; // if it is the summary page then just return
            cache[id] = $("#" + id).find(".input"); // else, find the div:s with class="input" and cache them with a key equal to the current step id
            //cache[id].detach().appendTo('#summaryContainer').show().find(":input").removeAttr("disabled"); // detach the cached inputs and append them to the summary container, also show and enable them
            $('#summaryContainer').append("<li>"+cache[id].value+"</li>")
          });
        }else if(data.previousStep === "wizard-summary-screen"){ // if we are movin back from the summary page
          $.each(cache, function(id, inputs){ // for each of the keys in the cache...do
            var i = inputs.detach().appendTo("#" + id).find(":input");  // put the input divs back into their normal step
            if(id === data.currentStep){ // (we are moving back from the summary page so...) if enable inputs on the current step
              i.removeAttr("disabled");
            }else{ // disable the inputs on the rest of the steps
              i.attr("disabled","disabled");
            }
          });
          cache = {}; // empty the cache again
        }
      })

      $('.link').button();

      // for handling the selection of measures from groups
      $('#all_measures').click(function () {
        $('#wizard-measures-screen input:checkbox').prop('checked', $(this).prop('checked'));
        $('.measure_group').prop('checked', $(this).prop('checked'));
        tallyMeasureGroups();
      });
      $('.measure_group_all').click(function () {
        var groupName = $(this).attr('id');
        $(this).closest('div').find('input:checkbox').prop('checked', $(this).prop('checked'));
        tallyMeasureGroups();
      });

      $('.measure_cb').change(function() {
        tallyMeasureGroups();
      });
      function tallyMeasureGroups() {
        var grandTotal = 0;
        $.each($('.measure_group'), function(index, item){
          var total = Math.max(0,$(this).find('input.measure_cb:checked').length);
          $('#' + $(item).attr('id') +'_group').prop('checked', $(this).find('input.measure_cb').length == total);
          grandTotal += total;
          $('#' + $(item).attr('id') +'_group_total').empty().html(total > 0 ? total : '');
        });
        $('#all_measures').prop('checked',$('#wizard-measures-screen input.measure_cb').length == grandTotal)
      }
    });

  </script>

<% end %>